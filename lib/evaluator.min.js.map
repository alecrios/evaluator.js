{"version":3,"sources":["webpack://evaluator/webpack/universalModuleDefinition","webpack://evaluator/webpack/bootstrap","webpack://evaluator/./src/index.js","webpack://evaluator/./src/evaluator.js","webpack://evaluator/./node_modules/lodash.round/index.js","webpack://evaluator/(webpack)/buildin/global.js","webpack://evaluator/./src/constant.js","webpack://evaluator/./src/operator.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_lodash","_interopRequireDefault","_constant","_operator","Evaluator","_classCallCheck","symbols","^","infix","*","/","%","+","prefix","-","operators","EXP","default","a","b","Math","pow","POS","NEG","MUL","DIV","MOD","ADD","SUB","constants","E","PI","numbers","openParenthesis","closeParenthesis","whitespace","token","test","operatorStack","currentOperator","length","topToken","isOperator","topOperator","method","hasGreaterPrecedence","hasEqualPrecedence","isLeftAssociative","previousToken","notation","undefined","isOpenParenthesis","isSymbol","isCloseParenthesis","isNumber","isConstant","string","_this","Error","match","filter","isWhitespace","map","toUpperCase","infixExpression","_this2","postfixExpression","forEach","index","push","parseFloat","operator","determineOperator","concat","topOperatorHasPrecedence","pop","_this3","evaluationStack","result","apply","_toConsumableArray","splice","reduction","parse","convert","resolve","error","global","INFINITY","MAX_INTEGER","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","freeSelf","self","Function","objectToString","toString","nativeMin","min","symbolProto","symbolToString","isObject","type","isObjectLike","toNumber","other","valueOf","replace","isBinary","slice","baseToString","func","round","number","precision","sign","toFinite","remainder","toInteger","pair","split","g","e","window","Constant","Operator","precedence","associativity"],"mappings":"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","file":"evaluator.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"evaluator\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"evaluator\"] = factory();\n\telse\n\t\troot[\"evaluator\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Evaluator from './evaluator';\n\nexport default Evaluator;\n","import round from 'lodash.round';\nimport Constant from './constant';\nimport Operator from './operator';\n\nexport default class Evaluator {\n\tconstructor() {\n\t\tthis.symbols = {\n\t\t\t'^': {infix: 'EXP'},\n\t\t\t'*': {infix: 'MUL'},\n\t\t\t'/': {infix: 'DIV'},\n\t\t\t'%': {infix: 'MOD'},\n\t\t\t'+': {infix: 'ADD', prefix: 'POS'},\n\t\t\t'-': {infix: 'SUB', prefix: 'NEG'},\n\t\t};\n\n\t\tthis.operators = {\n\t\t\t'EXP': new Operator('EXP', 4, 'right', (a, b) => a ** b),\n\t\t\t'POS': new Operator('POS', 3, 'right', (a) => a),\n\t\t\t'NEG': new Operator('NEG', 3, 'right', (a) => -a),\n\t\t\t'MUL': new Operator('MUL', 2, 'left', (a, b) => a * b),\n\t\t\t'DIV': new Operator('DIV', 2, 'left', (a, b) => a / b),\n\t\t\t'MOD': new Operator('MOD', 2, 'left', (a, b) => a % b),\n\t\t\t'ADD': new Operator('ADD', 1, 'left', (a, b) => a + b),\n\t\t\t'SUB': new Operator('SUB', 1, 'left', (a, b) => a - b),\n\t\t};\n\n\t\tthis.constants = {\n\t\t\t'E': new Constant('E', Math.E),\n\t\t\t'PI': new Constant('PI', Math.PI),\n\t\t};\n\n\t\tthis.numbers = /(\\d+\\.\\d*)|(\\d*\\.\\d+)|(\\d+)/;\n\n\t\tthis.openParenthesis = '(';\n\n\t\tthis.closeParenthesis = ')';\n\n\t\tthis.whitespace = /\\s/;\n\t}\n\n\tisSymbol(token) {\n\t\treturn Object.prototype.hasOwnProperty.call(this.symbols, token);\n\t}\n\n\tisOperator(token) {\n\t\treturn Object.prototype.hasOwnProperty.call(this.operators, token);\n\t}\n\n\tisConstant(token) {\n\t\treturn Object.prototype.hasOwnProperty.call(this.constants, token);\n\t}\n\n\tisNumber(token) {\n\t\treturn this.numbers.test(token);\n\t}\n\n\tisOpenParenthesis(token) {\n\t\treturn token === this.openParenthesis;\n\t}\n\n\tisCloseParenthesis(token) {\n\t\treturn token === this.closeParenthesis;\n\t}\n\n\tisWhitespace(token) {\n\t\treturn this.whitespace.test(token);\n\t}\n\n\ttopOperatorHasPrecedence(operatorStack, currentOperator) {\n\t\tif (!operatorStack.length) return false;\n\n\t\tconst topToken = operatorStack[operatorStack.length - 1];\n\n\t\tif (!this.isOperator(topToken)) return false;\n\n\t\tconst topOperator = this.operators[topToken];\n\n\t\tif (currentOperator.method.length === 1 && topOperator.method.length > 1) return false;\n\n\t\treturn (\n\t\t\ttopOperator.hasGreaterPrecedence(currentOperator)\n\t\t\t|| (topOperator.hasEqualPrecedence(currentOperator) && topOperator.isLeftAssociative())\n\t\t);\n\t}\n\n\tdetermineOperator(token, previousToken) {\n\t\tlet notation;\n\n\t\tif (\n\t\t\tpreviousToken === undefined\n\t\t\t|| this.isOpenParenthesis(previousToken)\n\t\t\t|| this.isSymbol(previousToken)\n\t\t) {\n\t\t\tnotation = 'prefix';\n\t\t} else if (\n\t\t\tthis.isCloseParenthesis(previousToken)\n\t\t\t|| (this.isNumber(previousToken)\n\t\t\t|| this.isConstant(previousToken))\n\t\t) {\n\t\t\tnotation = 'infix';\n\t\t}\n\n\t\treturn this.operators[this.symbols[token][notation]];\n\t}\n\n\tparse(string) {\n\t\tif (!string.length) {\n\t\t\tthrow Error('No input');\n\t\t}\n\n\t\tconst pattern = /(\\d+\\.\\d*)|(\\d*\\.\\d+)|(\\d+)|([a-zA-Z]+)|(.)/g;\n\t\tconst infixExpression = (string.match(pattern) || [])\n\t\t\t.filter((token) => !this.isWhitespace(token))\n\t\t\t.map((token) => token.toUpperCase());\n\n\t\treturn infixExpression;\n\t}\n\n\tconvert(infixExpression) {\n\t\tif (!infixExpression.length) {\n\t\t\tthrow Error('No valid tokens');\n\t\t}\n\n\t\tconst operatorStack = [];\n\t\tconst postfixExpression = [];\n\n\t\tinfixExpression.forEach((token, index) => {\n\t\t\tif (this.isNumber(token)) {\n\t\t\t\tpostfixExpression.push(parseFloat(token));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.isConstant(token)) {\n\t\t\t\tpostfixExpression.push(this.constants[token].name);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.isSymbol(token)) {\n\t\t\t\tconst operator = this.determineOperator(token, infixExpression[index - 1]);\n\n\t\t\t\tif (operator === undefined) {\n\t\t\t\t\tthrow Error(`Misused operator: ${token}`);\n\t\t\t\t}\n\n\t\t\t\twhile (this.topOperatorHasPrecedence(operatorStack, operator)) {\n\t\t\t\t\tpostfixExpression.push(operatorStack.pop());\n\t\t\t\t}\n\n\t\t\t\toperatorStack.push(operator.name);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.isOpenParenthesis(token)) {\n\t\t\t\toperatorStack.push(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.isCloseParenthesis(token)) {\n\t\t\t\twhile (!this.isOpenParenthesis(operatorStack[operatorStack.length - 1])) {\n\t\t\t\t\tif (!operatorStack.length) {\n\t\t\t\t\t\tthrow Error('Mismatched parentheses');\n\t\t\t\t\t}\n\n\t\t\t\t\tpostfixExpression.push(operatorStack.pop());\n\t\t\t\t}\n\n\t\t\t\toperatorStack.pop();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow Error(`Invalid token: ${token}`);\n\t\t});\n\n\t\twhile (operatorStack.length) {\n\t\t\tconst operator = operatorStack[operatorStack.length - 1];\n\n\t\t\tif (this.isOpenParenthesis(operator) || this.isCloseParenthesis(operator)) {\n\t\t\t\tthrow Error('Mismatched parentheses');\n\t\t\t}\n\n\t\t\tpostfixExpression.push(operatorStack.pop());\n\t\t}\n\n\t\treturn postfixExpression;\n\t}\n\n\tresolve(postfixExpression) {\n\t\tif (!postfixExpression.length) {\n\t\t\tthrow Error('No operations');\n\t\t}\n\n\t\tconst evaluationStack = [];\n\n\t\tpostfixExpression.forEach((token) => {\n\t\t\tif (this.isNumber(token)) {\n\t\t\t\tevaluationStack.push(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.isConstant(token)) {\n\t\t\t\tevaluationStack.push(this.constants[token].value);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst operator = this.operators[token];\n\n\t\t\tif (evaluationStack.length < operator.method.length) {\n\t\t\t\tthrow Error('Missing operand');\n\t\t\t}\n\n\t\t\tif (operator.name === 'DIV' && evaluationStack[1] === 0) {\n\t\t\t\tthrow Error('Division by zero');\n\t\t\t}\n\n\t\t\tconst result = operator.method(...evaluationStack.splice(-operator.method.length));\n\t\t\tevaluationStack.push(result);\n\t\t});\n\n\t\tif (evaluationStack.length > 1) {\n\t\t\tthrow Error('Missing operator');\n\t\t}\n\n\t\tconst reduction = evaluationStack[0];\n\t\tconst result = round(reduction, 8);\n\n\t\treturn result;\n\t}\n\n\tevaluate(string) {\n\t\ttry {\n\t\t\tconst infixExpression = this.parse(string);\n\t\t\tconst postfixExpression = this.convert(infixExpression);\n\t\t\tconst result = this.resolve(postfixExpression);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Creates a function like `_.round`.\n *\n * @private\n * @param {string} methodName The name of the `Math` method to use when rounding.\n * @returns {Function} Returns the new round function.\n */\nfunction createRound(methodName) {\n  var func = Math[methodName];\n  return function(number, precision) {\n    number = toNumber(number);\n    precision = nativeMin(toInteger(precision), 292);\n    if (precision) {\n      // Shift with exponential notation to avoid floating-point issues.\n      // See [MDN](https://mdn.io/round#Examples) for more details.\n      var pair = (toString(number) + 'e').split('e'),\n          value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n      pair = (toString(value) + 'e').split('e');\n      return +(pair[0] + 'e' + (+pair[1] - precision));\n    }\n    return func(number);\n  };\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Computes `number` rounded to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round.\n * @param {number} [precision=0] The precision to round to.\n * @returns {number} Returns the rounded number.\n * @example\n *\n * _.round(4.006);\n * // => 4\n *\n * _.round(4.006, 2);\n * // => 4.01\n *\n * _.round(4060, -2);\n * // => 4100\n */\nvar round = createRound('round');\n\nmodule.exports = round;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","export default class Constant {\n\tconstructor(name, value) {\n\t\tthis.name = name;\n\t\tthis.value = value;\n\t}\n}\n","export default class Operator {\n\tconstructor(name, precedence, associativity, method) {\n\t\tthis.name = name;\n\t\tthis.precedence = precedence;\n\t\tthis.associativity = associativity;\n\t\tthis.method = method;\n\t}\n\n\thasEqualPrecedence(operator) {\n\t\treturn this.precedence === operator.precedence;\n\t}\n\n\thasGreaterPrecedence(operator) {\n\t\treturn this.precedence > operator.precedence;\n\t}\n\n\tisLeftAssociative() {\n\t\treturn this.associativity === 'left';\n\t}\n}\n"],"sourceRoot":""}